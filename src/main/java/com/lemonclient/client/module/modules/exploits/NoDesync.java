package com.lemonclient.client.module.modules.exploits;

import com.lemonclient.api.event.events.PacketEvent;
import com.lemonclient.api.setting.values.BooleanSetting;
import com.lemonclient.api.setting.values.IntegerSetting;
import com.lemonclient.api.util.misc.Timing;
import com.lemonclient.api.util.world.EntityUtil;
import com.lemonclient.client.module.Category;
import com.lemonclient.client.module.Module;
import com.lemonclient.mixin.mixins.accessor.AccessorEntityLivingBase;
import java.util.Iterator;
import java.util.function.Predicate;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityEnderCrystal;
import net.minecraft.init.SoundEvents;
import net.minecraft.inventory.ClickType;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.CPacketClickWindow;
import net.minecraft.network.play.client.CPacketConfirmTransaction;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.network.play.server.SPacketEntityStatus;
import net.minecraft.network.play.server.SPacketSoundEffect;
import net.minecraft.util.SoundCategory;

@Module.Declaration(
   name = "NoDesync",
   category = Category.Exploits
)
public class NoDesync extends Module {
   BooleanSetting crystal = this.registerBoolean("Crystal", true);
   BooleanSetting eat = this.registerBoolean("Eat", true);
   BooleanSetting finish = this.registerBoolean("Finish Eat", true, () -> {
      return (Boolean)this.eat.getValue();
   });
   BooleanSetting keep = this.registerBoolean("Keep Eat", true, () -> {
      return (Boolean)this.eat.getValue();
   });
   IntegerSetting eatDelay = this.registerInteger("Eat Delay", 50, 0, 1000, () -> {
      return (Boolean)this.eat.getValue();
   });
   BooleanSetting inventory = this.registerBoolean("Inventory", true);
   IntegerSetting slot = this.registerInteger("Slot Click", 1, 1, 36, () -> {
      return (Boolean)this.inventory.getValue();
   });
   IntegerSetting inventoryDelay = this.registerInteger("Inventory Delay", 10, 0, 100, () -> {
      return (Boolean)this.inventory.getValue();
   });
   Timing eatTimer = new Timing();
   Timing inventoryTimer = new Timing();
   @EventHandler
   private final Listener<PacketEvent.Receive> receiveListener = new Listener((event) -> {
      if (mc.field_71441_e != null && mc.field_71439_g != null) {
         if ((Boolean)this.eat.getValue() && event.getPacket() instanceof SPacketEntityStatus) {
            SPacketEntityStatus packet = (SPacketEntityStatus)event.getPacket();
            if (packet == null || packet.func_149160_c() == -1) {
               return;
            }

            if (EntityUtil.isEating() && packet.func_149160_c() == 9 && packet.func_149161_a(mc.field_71441_e) == mc.field_71439_g) {
               if ((Boolean)this.finish.getValue()) {
                  ((AccessorEntityLivingBase)mc.field_71439_g).invokeOnItemUseFinish();
               }

               if ((Boolean)this.keep.getValue()) {
                  mc.field_71439_g.field_71174_a.func_147297_a(new CPacketPlayerTryUseItem(mc.field_71439_g.func_184600_cs()));
               }

               this.eatTimer.reset();
            }
         }

         if ((Boolean)this.crystal.getValue() && event.getPacket() instanceof SPacketSoundEffect) {
            SPacketSoundEffect packetx = (SPacketSoundEffect)event.getPacket();
            if (packetx.func_186977_b() == SoundCategory.BLOCKS && packetx.func_186978_a() == SoundEvents.field_187539_bB) {
               Iterator var3 = mc.field_71441_e.field_72996_f.iterator();

               while(var3.hasNext()) {
                  Entity e = (Entity)var3.next();
                  if (e instanceof EntityEnderCrystal && e.func_70011_f(packetx.func_149207_d(), packetx.func_149211_e(), packetx.func_149210_f()) <= 6.0D) {
                     e.func_70106_y();
                  }
               }
            }
         }

      }
   }, new Predicate[0]);

   public void fast() {
      if (mc.field_71441_e != null && mc.field_71439_g != null && !mc.field_71439_g.field_70128_L) {
         if ((Boolean)this.eat.getValue()) {
            if (EntityUtil.isEating()) {
               if (this.eatTimer.passedMs((long)(Integer)this.eatDelay.getValue())) {
                  mc.field_71439_g.field_71174_a.func_147297_a(new CPacketPlayerTryUseItem(mc.field_71439_g.func_184600_cs()));
                  this.eatTimer.reset();
               }
            } else {
               this.eatTimer.reset();
            }
         }

         if ((Boolean)this.inventory.getValue() && this.inventoryTimer.passedTick((double)(Integer)this.inventoryDelay.getValue())) {
            int slot = (Integer)this.slot.getValue() - 1;
            ItemStack itemStack = mc.field_71439_g.field_71071_by.func_70301_a(slot);
            if (slot < 9) {
               slot += 36;
            }

            short id = mc.field_71439_g.field_71070_bA.func_75136_a(mc.field_71439_g.field_71071_by);
            mc.field_71439_g.field_71174_a.func_147297_a(new CPacketClickWindow(0, slot, 0, ClickType.PICKUP, itemStack, id));
            mc.field_71439_g.field_71174_a.func_147297_a(new CPacketConfirmTransaction(0, id, true));
            mc.field_71439_g.field_71174_a.func_147297_a(new CPacketClickWindow(0, slot, 0, ClickType.PICKUP, itemStack, mc.field_71439_g.field_71070_bA.func_75136_a(mc.field_71439_g.field_71071_by)));
            mc.field_71439_g.field_71070_bA.func_75142_b();
            this.inventoryTimer.reset();
         }

      }
   }
}
